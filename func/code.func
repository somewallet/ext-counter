;; Simple wallet smart contract

() recv_internal(slice in_msg) impure {
    ;; do nothing for internal messages
}

() recv_external(slice in_msg) impure {

    var signature = in_msg~load_bits(512);
    var cs = in_msg;
    var msg_seqno = cs~load_uint(32);
    var ds = get_data().begin_parse();
    var (stored_seqno, public_key) = (ds~load_uint(32), ds~load_uint(256));
    ds.end_parse();
    throw_unless(33, msg_seqno == stored_seqno);
    throw_unless(35, check_signature(slice_hash(in_msg), signature, public_key));
    accept_message();
    cs~touch();

    ;; Your code here

    set_data(
        begin_cell()
            .store_uint(stored_seqno + 1, 32)
            .store_uint(public_key, 256)
        .end_cell()
    );
    
}

;; Get methods

int seqno() method_id {
    return get_data().begin_parse().preload_uint(32);
}

int get_public_key() method_id {
    var cs = get_data().begin_parse();
    cs~load_uint(64);
    return cs.preload_uint(256);
}